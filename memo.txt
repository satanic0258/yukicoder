#####################
###  繰返し自乗法  ###
#####################
●説明:a^k(mod m)を高速で求める
計算量:O(log_2(k))
●概要:
(1)kを二進数で表す(u{i}:=(2^iの位), U:=(二進数表記の桁数))
(2)a=A{0}(mod m)とし、(A{n})^2=A{n+1}(mod m)を満たすA{s}を求めていく(0<=s<=U)
(3)a^k(mod m) = Π[i=0,U](A{i})^(u{i})
●理由:
まず、(2)は、
A{0}=a=a^(2^0) (mod m), A{1}=(A{0})^2=a^2=a^(2^1) (mod m)
,,,A{i}=a^(2^i) (mod m)
kを二進数で表すと、k=u{0}*2^0 + u{1}*2^1 + ...より、
a^k = a^(Σ[i=0,U]u{i}*2^i)
    = Π[i=0,U]a^(u{i}*2^i)    (∵a^(b+c) = a^b+a^c)
    = Π[i=0,U](a^(2^i))^u{i}
    = Π[i=0,U](A{i})^(u{i}) (mod m)
より。
●参照:http://tsujimotter.info/2012/10/08/square/
●実装:No0016.cpp

